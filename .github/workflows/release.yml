name: Publish to NPM

on:
  release:
    types:
      - published

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    env:
      TERM: xterm
      PRERELEASE_TAG: edge
    strategy:
      matrix:
        os:
          - ubuntu-22.04
        node-version:
          - '18'
    steps:
      # Install deps and cache
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org
          cache: npm
      - name: Install dependencies
        run: npm clean-install --prefer-offline --frozen-lockfile

      # Let's do tests rq just to make sure we dont push something that is fundamentally broken
      - name: Lint code
        run: npm run lint
      - name: Run unit tests
        run: npm run test:unit
      - name: Run leia tests
        run: npx leia examples/basic-example.md
      - name: Export formatted release date
        run: echo "RELEASE_DATE=$(date -d "${{ github.event.release.published_at }}" "+%B %e, %Y" | tr -s ' ')" >> $GITHUB_ENV
      - name: Prepare release
        uses: lando/prepare-release-action@v3
        with:
          sync-token: ${{ secrets.RTFM47_COAXIUM_INJECTOR }}
          sync-email: rtfm47@lando.dev
          sync-username: rtfm-47
          update-files: CHANGELOG.md
          update-files-header: |
            ## {{ UNRELEASED_VERSION }} - [{{ UNRELEASED_DATE }}]({{ UNRELEASED_LINK }})
          update-files-meta: |
            UNRELEASED_DATE=${{ env.RELEASE_DATE }}
            UNRELEASED_LINK=${{ github.event.release.html_url }}
            UNRELEASED_VERSION=${{ github.event.release.tag_name }}
      - name: Publish to npm
        run: |
          if [ "${{ github.event.release.prerelease }}" ==  "false" ]; then
            npm publish --access public --dry-run
            npm publish --access public
            echo "::notice title=Published ${{ github.ref_name }} to @${{ github.repository }}::This is a stable release published to the default 'latest' npm tag"
          else
            npm publish --access public --tag ${{ env.PRERELEASE_TAG }} --dry-run
            npm publish --access public --tag ${{ env.PRERELEASE_TAG }}
            echo "::notice title=Published ${{ github.ref_name }} to @${{ github.repository }}@${{ env.PRERELEASE_TAG }}::This is a pre-release published to the '${{ env.PRERELEASE_TAG }}' npm tag"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_DEPLOY_TOKEN }}
